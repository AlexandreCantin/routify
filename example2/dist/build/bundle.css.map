{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Helper.svelte",
    "..\\..\\File.svelte",
    "..\\..\\Input.svelte",
    "..\\..\\Dir.svelte",
    "..\\..\\File.svelte",
    "..\\..\\ServiceWorker.svelte",
    "..\\..\\Splash.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { writable } from \"svelte/store\";\r\n  import { setContext } from \"svelte\";\r\n  import { route } from \"@sveltech/routify\";\r\n  import { options } from \"./api\";\r\n  import Tree from \"./components/tree/Tree.svelte\";\r\n  import File from \"./components/file/File.svelte\";\r\n  import Header from \"./components/Header.svelte\";\r\n  import \"./components/style\";\r\n  import Logo from \"./components/logo.svelte\";\r\n  export let tree, port;\r\n  $options.port = port;\r\n  const treeStore = writable(tree);\r\n  setContext(\"treeStore\", treeStore);\r\n</script>\r\n\r\n<style>\r\n  .routify {\r\n    position: fixed;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 99999;\r\n  }\r\n  .content {\r\n    background: white;\r\n    box-shadow: 0 0 10px rgba(127, 127, 127, 0.5);\r\n  }\r\n  .main {\r\n    display: flex;\r\n  }\r\n  .tree,\r\n  .file {\r\n    overflow-y: auto;\r\n    max-height: 600px;\r\n    padding-right: 24px;\r\n  }\r\n  .file {\r\n    min-width: 600px;\r\n    width: auto;\r\n    flex: auto;\r\n  }\r\n\r\n  * :global(.decorationsOverviewRuler) {\r\n    display: none;\r\n  }\r\n</style>\r\n\r\n{#if $route}\r\n  <div class=\"routify\" id=\"__routify-helper\">\r\n    <div on:click={() => ($options.showHelper = !$options.showHelper)}>\r\n      <Logo />\r\n    </div>\r\n\r\n    {#if $options.showHelper}\r\n      <div class=\"content\">\r\n        <div style=\"width: 100%; display: flex;\">\r\n          <Header />\r\n        </div>\r\n        <div class=\"main\">\r\n          <div class=\"tree\">\r\n            <Tree tree={$treeStore} />\r\n          </div>\r\n          {#if $options.showFile}\r\n            <div class=\"file\">\r\n              <File />\r\n            </div>\r\n          {/if}\r\n        </div>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n{/if}\r\n",
    "<script>\r\n  import { route } from \"@sveltech/routify\";\r\n  import { tree, routes } from \"../../api\";\r\n  import Input from \"./Input.svelte\";\r\n  import AddMeta from \"./AddMeta.svelte\";\r\n\r\n  let metaName = \"\";\r\n\r\n  $: file = $route;\r\n  $: ownMeta = file && file.ownMeta;\r\n  $: meta = file && file.meta;\r\n\r\n  let userInputs = [];\r\n  let inheritedInputs = [];\r\n  \r\n  function setInputs(){\r\n    userInputs = clone(Object.entries(ownMeta || {})).map(toObj)\r\n    inheritedInputs = clone(Object.entries(meta || {}))\r\n      .filter(([inhKey]) => !userInputs.find(({ name }) => inhKey === name))\r\n      .map(toObj)\r\n  }\r\n\r\n  $: if(ownMeta) setInputs()\r\n\r\n  function toObj([name, value]) {\r\n    return { name, value };\r\n  }\r\n\r\n  function clone(obj){return JSON.parse(JSON.stringify(obj))}\r\n</script>\r\n\r\n<style>\r\n  section {\r\n    margin-bottom: 32px;\r\n    padding: 0 32px;\r\n  }\r\n</style>\r\n\r\n{#if meta}\r\n  <AddMeta bind:userInputs />\r\n  <section>\r\n    <h1>{file.api.title}</h1>\r\n    <div>\r\n      <span>{file.filepath}</span>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <form action=\"\">\r\n      <fieldset>\r\n        <legend>Entries</legend>\r\n\r\n        <Input\r\n          name=\"title\"\r\n          bind:value={ownMeta.title}\r\n          placeholder={file.api.title} />\r\n\r\n        {#each userInputs as { name, value }}\r\n          <Input {name} bind:value />\r\n        {/each}\r\n\r\n        {#each inheritedInputs as { name, value }}\r\n          <Input {name} bind:value />\r\n        {/each}\r\n      </fieldset>\r\n    </form>\r\n  </section>\r\n{/if}\r\n",
    "<script>\r\n  import JsonBox from \"./JsonBox.svelte\";\r\n  export let value = \"\";\r\n  export let name;\r\n  export let placeholder = \"\";\r\n\r\n  const configs = {\r\n    title: { type: \"string\" },\r\n    index: { type: \"string\" },\r\n    preload: { type: \"boolean\" },\r\n    bundle: { type: \"boolean\" },\r\n    \"precache-order\": { type: \"ignore\" },\r\n    \"precache-proximity\": { type: \"ignore\" },\r\n    recursive: { type: \"ignore\" },\r\n  };\r\n  $: config = configs[name] || {};\r\n  $: type = config.type || \"json\";\r\n</script>\r\n\r\n<style>\r\n  * :global() {\r\n    --bg-color: #f5f5f5;\r\n  }\r\n  input {\r\n    background: var(--bg-color);\r\n    border: none;\r\n    padding: 4px 8px;\r\n    border-radius: 2px;\r\n    height: 48px;\r\n  }\r\n  .json {\r\n    background: var(--bg-color);\r\n    padding: 12px 8px 0 0;\r\n    border-radius: 2px;\r\n  }\r\n  * :global(.monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input, .monaco-editor .margin) {\r\n    background-color: var(--bg-color) !important;\r\n  }\r\n  h5 {\r\n    font-weight: bold;\r\n    padding-top: 18px;\r\n    height: 48px;\r\n    display: block;\r\n  }\r\n</style>\r\n\r\n<div style=\"\">\r\n  <h5>{name}</h5>\r\n  <!-- {JSON.stringify(value)} -->\r\n  {#if type === 'json'}\r\n    <div class=\"json\">\r\n      <JsonBox {name} bind:value />\r\n      \r\n    </div>\r\n  {:else if type === 'boolean'}\r\n    <input type=\"checkbox\" bind:value />\r\n  {:else}\r\n    <input type=\"text\" bind:value {placeholder} />\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  export let node;\r\n  import { crossfade } from \"svelte/transition\";\r\n  import { flip } from \"svelte/animate\";\r\n  import { getContext } from \"svelte\";\r\n\r\n  const { File } = getContext(\"treeCmps\");\r\n\r\n  const [send, receive] = crossfade({});\r\n\r\n  function sorter(a, b) {\r\n    return a.ownMeta.index - b.ownMeta.index;\r\n  }\r\n  function filter(a) {\r\n    return a.isPage || a.isDir;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n  ul {\r\n    padding-left: 18px;\r\n  }\r\n</style>\r\n\r\n<ul class=\"folder\">\r\n  {#each node.children\r\n    .filter(filter)\r\n    .sort(sorter) as _node (_node.absolutePath)}\r\n    <li\r\n      class=\"file-container\"\r\n      animate:flip\r\n      in:receive={{ key: _node.absolutePath }}\r\n      out:send={{ key: _node.absolutePath }}>\r\n      <File node={_node} dir={node} />\r\n    </li>\r\n  {/each}\r\n</ul>\r\n",
    "<script>\r\n  import { getContext } from \"svelte\";\r\n  import { draggedFile, state, options } from \"../../api\";\r\n  import { goto, isActive } from \"@sveltech/routify\";\r\n\r\n  import { handleDrag } from \"../../handleDrag\";\r\n\r\n  export let node, dir;\r\n  const { Dir } = getContext(\"treeCmps\");\r\n\r\n  const styles = [\"dragged-over\", \"dragged-under\", \"dragged-in\"];\r\n\r\n  let draggedItem = null;\r\n  let position = null;\r\n\r\n  function dragover(e) {\r\n    const { target, srcElement, toElement } = e;\r\n\r\n    if (!target.dataset.nodeDir) return false;\r\n    if ($draggedFile.dataset.nodeDir !== target.dataset.nodeDir) return false;\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    const y = e.clientY;\r\n    const top = target.getBoundingClientRect().top;\r\n    const height = target.getBoundingClientRect().height;\r\n    const inTop = y < top + height / 2;\r\n\r\n    position = inTop ? \"over\" : \"under\";\r\n\r\n    target.classList.remove(...styles);\r\n    if (inTop) target.classList.add(\"dragged-over\");\r\n    else target.classList.add(\"dragged-under\");\r\n  }\r\n  function dragleave(ev) {\r\n    ev.stopPropagation();\r\n    ev.target.classList.remove(...styles);\r\n  }\r\n  function dragstart(e) {\r\n    if (e.target.dataset.nodeIndex === \"false\") return false;\r\n    $draggedFile = e.target;\r\n    e.stopPropagation();\r\n  }\r\n  function drop(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (!e.target.dataset.nodeDir) return false;\r\n    handleDrag($draggedFile, e.target, position);\r\n    e.target.classList.remove(...styles);\r\n  }\r\n  function dragend() {\r\n    $draggedFile = null;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  :global(.files.dragging :not(.file)) {\r\n    pointer-events: none;\r\n  }\r\n  .file {\r\n    pointer-events: all;\r\n    padding: 3px;\r\n    color: #aaa;\r\n    cursor: pointer;\r\n  }\r\n  .file.draggable {\r\n    color: #333;\r\n  }\r\n  * :global(.dragged-over) {\r\n    border-top: 3px solid black;\r\n    padding-top: 0;\r\n  }\r\n  * :global(.dragged-under) {\r\n    border-bottom: 3px solid black;\r\n    padding-bottom: 0;\r\n  }\r\n  * :global(.dragged-in) {\r\n    border: 3px solid black;\r\n    padding: 0;\r\n  }\r\n\r\n  :global(.files .file-display .index) {\r\n    display: none;\r\n  }\r\n  :global(.files.showIndex .file-display .index) {\r\n    display: inline-block;\r\n  }\r\n\r\n  div.file .file-display {\r\n    /* border: 1px solid red */\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"file\"\r\n  class:draggable={node.ownMeta.index !== false}\r\n  draggable=\"true\"\r\n  on:dragstart={dragstart}\r\n  on:dragover={dragover}\r\n  on:dragleave={dragleave}\r\n  on:dragend={dragend}\r\n  on:drop={drop}\r\n  data-node={node}\r\n  data-node-path={node.filepath}\r\n  data-node-file={node.file}\r\n  data-node-index={node.ownMeta.index}\r\n  data-node-dir={dir.filepath}>\r\n\r\n  <!-- <div class=\"file-display\"> -->\r\n  <div\r\n    class=\"file-display\"\r\n    on:click={() => history.pushState({}, '', node.path)}>\r\n    {#if $options.showIndex}\r\n      <span class=\"index\">{node.ownMeta.index}</span>\r\n    {/if}\r\n    {node.api.title || node.file}\r\n  </div>\r\n  {#if node.children && node.children.length}\r\n    <Dir {node} />\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\nconsole.log('ffs')\r\n  let prompt = false\r\n  let justInstalled = false\r\n\r\n  if ('serviceWorker' in navigator) {\r\n    import('workbox-window').then(async ({ Workbox, messageSW }) => {\r\n      const wb = new Workbox('/sw.js')\r\n      const _messageSW = messageSW\r\n\r\n      wb.addEventListener('installed', () => (justInstalled = true))\r\n      wb.addEventListener('externalinstalled', () => (justInstalled = true))\r\n      wb.addEventListener('waiting', showPrompt)\r\n      wb.addEventListener('externalwaiting', showPrompt)\r\n      const registration = await wb.register()\r\n\r\n      function showPrompt(event) {\r\n        prompt = {\r\n          accept: async e => {\r\n            e.preventDefault()\r\n            wb.addEventListener('controlling', event =>\r\n              window.location.reload()\r\n            )\r\n            if (registration && registration.waiting) {\r\n              _messageSW(registration.waiting, { type: 'SKIP_WAITING' })\r\n            }\r\n          },\r\n        }\r\n      }\r\n    })\r\n  }\r\n</script>\r\n\r\n<style>\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  a.close {\r\n    position: absolute;\r\n    top: 4px;\r\n    right: 4px;\r\n    line-height: 10px;\r\n  }\r\n  div {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 9999;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    border-radius: 0 4px 0 0;\r\n  }\r\n  p {\r\n    margin: 16px 32px;\r\n  }\r\n</style>\r\n\r\n{#if prompt}\r\n  <div>\r\n    <p>\r\n      Update available.\r\n      <a href=\"/update\" on:click={prompt.accept}>Update</a>\r\n      <a href=\"/close\" class=\"close\" on:click={() => (prompt = false)}>×</a>\r\n    </p>\r\n  </div>\r\n{/if}\r\n\r\n{#if justInstalled}\r\n  <div id=\"justInstalled\" >Just installed</div> \r\n{/if}\r\n",
    "<script>\r\n  import { draw } from 'svelte/transition'\r\n  let duration = 2000\r\n  let drawing = true\r\n  let show = false\r\n  let error = false\r\n  setTimeout(() => (show = true))\r\n  setTimeout(() => (drawing = false), 1800)\r\n  setTimeout(() => (error = true), 10000)\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    text-align: center;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    margin: 0;\r\n  }\r\n  .error {min-height: 100px}\r\n  .svg {\r\n    width: 200px;\r\n    margin: auto;\r\n  }\r\n  path {\r\n    transition: 0.3s ease;\r\n    stroke-width: 1;\r\n    stroke: black;\r\n    stroke-width: 0;\r\n  }\r\n  .svg.drawing path {\r\n    stroke-width: 2;\r\n    fill-opacity: 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\">\r\n  <div class=\"svg\" class:drawing>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n      style=\"isolation:isolate\"\r\n      viewBox=\"0 0 1000 1000\">\r\n      <defs>\r\n        <clipPath id=\"_clipPath_40vHZL606H8eXCPAFONHYpjfq1ISybTL\">\r\n          <rect width=\"1000\" height=\"1000\" />\r\n        </clipPath>\r\n      </defs>\r\n      <g clip-path=\"url(#_clipPath_40vHZL606H8eXCPAFONHYpjfq1ISybTL)\">\r\n        <linearGradient\r\n          id=\"_lgradient_2\"\r\n          x1=\"-0.011142038971568513\"\r\n          y1=\"-0.011791871475954507\"\r\n          x2=\"0.9938039543302696\"\r\n          y2=\"0.9909604299907665\"\r\n          gradientTransform=\"matrix(532,0,0,368.749,249,625.251)\"\r\n          gradientUnits=\"userSpaceOnUse\">\r\n          <stop\r\n            offset=\"1.7391304347826086%\"\r\n            stop-opacity=\"1\"\r\n            style=\"stop-color:rgb(255,124,247)\" />\r\n          <stop\r\n            offset=\"100%\"\r\n            stop-opacity=\"1\"\r\n            style=\"stop-color:rgb(255,203,252)\" />\r\n        </linearGradient>\r\n        {#if show}\r\n          <path\r\n            transition:draw|local={{ duration }}\r\n            d=\" M 564.251 625.251 L 659 720 L 700 675 L 781 994 L 457 921 L 506\r\n            873 L 249 626 L 249 626 L 542.5 626 C 549.812 626 557.065 625.748\r\n            564.251 625.251 Z \"\r\n            fill=\"url(#_lgradient_2)\" />\r\n          <linearGradient\r\n            id=\"_lgradient_3\"\r\n            x1=\"0.13056277056277052\"\r\n            y1=\"0.05232744783306609\"\r\n            x2=\"0.9350649350649348\"\r\n            y2=\"0.7710005350454795\"\r\n            gradientTransform=\"matrix(770,0,0,623,84,3)\"\r\n            gradientUnits=\"userSpaceOnUse\">\r\n            <stop\r\n              offset=\"2.1739130434782608%\"\r\n              stop-opacity=\"1\"\r\n              style=\"stop-color:rgb(241,93,232)\" />\r\n            <stop\r\n              offset=\"100%\"\r\n              stop-opacity=\"1\"\r\n              style=\"stop-color:rgb(184,58,177)\" />\r\n          </linearGradient>\r\n          <path\r\n            transition:draw|local={{ duration }}\r\n            d=\" M 542.5 215.388 L 84 215.388 L 203 3 L 542.5 3 L 542.5 3 C\r\n            714.422 3 854 142.578 854 314.5 C 854 486.422 714.422 626 542.5 626\r\n            L 249 626 L 364 413.612 L 542.5 413.612 L 542.5 413.612 C 597.201\r\n            413.612 641.612 369.201 641.612 314.5 C 641.612 259.799 597.201\r\n            215.388 542.5 215.388 L 542.5 215.388 L 542.5 215.388 Z \"\r\n            fill=\"url(#_lgradient_3)\" />\r\n        {/if}\r\n      </g>\r\n    </svg>\r\n  </div>\r\n  <h1 style=\"\">Generating routes...</h1>\r\n  <div class=\"error\">\r\n    {#if error}\r\n      <h3>Your app should probably have loaded by now</h3>\r\n    {/if}\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "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"
}